[{"C:\\Users\\19053\\Documents\\GitHub\\Team-Tracker\\team-tracker\\src\\index.js":"1","C:\\Users\\19053\\Documents\\GitHub\\Team-Tracker\\team-tracker\\src\\reportWebVitals.js":"2","C:\\Users\\19053\\Documents\\GitHub\\Team-Tracker\\team-tracker\\src\\App.js":"3","C:\\Users\\19053\\Documents\\GitHub\\Team-Tracker\\team-tracker\\src\\components\\Navbar\\index.js":"4","C:\\Users\\19053\\Documents\\GitHub\\Team-Tracker\\team-tracker\\src\\components\\Navbar\\NavbarElements.js":"5","C:\\Users\\19053\\Documents\\GitHub\\Team-Tracker\\team-tracker\\src\\pages\\index.js":"6","C:\\Users\\19053\\Documents\\GitHub\\Team-Tracker\\team-tracker\\src\\pages\\schedule.js":"7","C:\\Users\\19053\\Documents\\GitHub\\Team-Tracker\\team-tracker\\src\\pages\\stats.js":"8","C:\\Users\\19053\\Documents\\GitHub\\Team-Tracker\\team-tracker\\src\\pages\\playerList.js":"9"},{"size":198,"mtime":1608078878749,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":654,"mtime":1608141458361,"results":"13","hashOfConfig":"11"},{"size":938,"mtime":1608252508465,"results":"14","hashOfConfig":"11"},{"size":1353,"mtime":1608185051742,"results":"15","hashOfConfig":"11"},{"size":4702,"mtime":1608185494327,"results":"16","hashOfConfig":"11"},{"size":6007,"mtime":1608269750111,"results":"17","hashOfConfig":"11"},{"size":5285,"mtime":1608269709242,"results":"18","hashOfConfig":"11"},{"size":8564,"mtime":1608254022994,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"6d1onv",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},"C:\\Users\\19053\\Documents\\GitHub\\Team-Tracker\\team-tracker\\src\\index.js",[],["40","41"],"C:\\Users\\19053\\Documents\\GitHub\\Team-Tracker\\team-tracker\\src\\reportWebVitals.js",[],"C:\\Users\\19053\\Documents\\GitHub\\Team-Tracker\\team-tracker\\src\\App.js",[],"C:\\Users\\19053\\Documents\\GitHub\\Team-Tracker\\team-tracker\\src\\components\\Navbar\\index.js",[],"C:\\Users\\19053\\Documents\\GitHub\\Team-Tracker\\team-tracker\\src\\components\\Navbar\\NavbarElements.js",[],"C:\\Users\\19053\\Documents\\GitHub\\Team-Tracker\\team-tracker\\src\\pages\\index.js",[],"C:\\Users\\19053\\Documents\\GitHub\\Team-Tracker\\team-tracker\\src\\pages\\schedule.js",["42"],"C:\\Users\\19053\\Documents\\GitHub\\Team-Tracker\\team-tracker\\src\\pages\\stats.js",[],"C:\\Users\\19053\\Documents\\GitHub\\Team-Tracker\\team-tracker\\src\\pages\\playerList.js",["43","44","45","46","47"],"import React, { useState } from 'react';\r\nimport { Button, Table, Input, message, InputNumber, Modal, Popconfirm, Form } from 'antd';\r\nimport { Edit, Delete } from '@material-ui/icons/'\r\nimport './pages.css'\r\n\r\nconst firstNames = ['John', 'Terry', 'George', 'Mike', 'Gary', 'Tony', 'Joe', 'James', 'Eric', 'Sergio', \"Jacob\", \"Cory\", \"Trevor\", 'Ross'];\r\nconst lastNames = ['Smith', 'Brown', 'Roy', 'Johnson', 'Lee', 'Wilson', 'MacDonald', 'Taylor', 'Williams', 'Thompson'];\r\nconst originData = [];\r\n\r\nfor (let i = 0; i < 4; i++) {\r\n    let firstName = firstNames[Math.floor(Math.random() * firstNames.length)];\r\n    let lastName = lastNames[Math.floor(Math.random() * lastNames.length)];\r\n    let name = firstName + ` ` + lastName;\r\n    let emailHandle = (firstName + lastName).toLowerCase();\r\n    originData.push({\r\n        key: i.toString(),\r\n        name: name,\r\n        email: emailHandle + `@citylions.com`,\r\n    });\r\n}\r\n\r\n\r\nconst EditableCell = ({\r\n    editing,\r\n    dataIndex,\r\n    title,\r\n    inputType,\r\n    record,\r\n    index,\r\n    children,\r\n    ...restProps\r\n}) => {\r\n    const inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\r\n    return (\r\n        <td {...restProps}>\r\n            {editing ? (\r\n                <Form.Item\r\n                    name={dataIndex}\r\n                    style={{\r\n                        margin: 0,\r\n                    }}\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: `Please Input ${title}!`,\r\n                        },\r\n                    ]}\r\n                >\r\n                    {inputNode}\r\n                </Form.Item>\r\n            ) : (\r\n                    children\r\n                )}\r\n        </td>\r\n    );\r\n};\r\n\r\nconst PlayerList = () => {\r\n    const [form] = Form.useForm();\r\n    const [data, setData] = useState(originData);\r\n    const [editingKey, setEditingKey] = useState('');\r\n    const [isModalVisible, setIsModalVisible] = useState(false) \r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n        message.success('New Player Added To Team!');\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n    const isEditing = (record) => record.key === editingKey;\r\n\r\n    const edit = (record) => {\r\n        form.setFieldsValue({\r\n            name: '',\r\n            email: '',\r\n            ...record,\r\n        });\r\n        setEditingKey(record.key);\r\n    };\r\n\r\n    const deleteRow = (record) => {\r\n\r\n            let temp = data.filter(x => x.key !== record.key)\r\n            let i = 0;\r\n            temp.forEach(x => x.key = i++)\r\n            setData(temp);   \r\n    };\r\n\r\n    const cancel = () => {\r\n        setEditingKey('');\r\n    };\r\n\r\n    const save = async (key) => {\r\n        try {\r\n            const row = await form.validateFields();\r\n            const newData = [...data];\r\n            const index = newData.findIndex((item) => key === item.key);\r\n\r\n            if (index > -1) {\r\n                const item = newData[index];\r\n                newData.splice(index, 1, { ...item, ...row });\r\n                setData(newData);\r\n                setEditingKey('');\r\n            } else {\r\n                newData.push(row);\r\n                setData(newData);\r\n                setEditingKey('');\r\n            }\r\n        } catch (errInfo) {\r\n            console.log('Validate Failed:', errInfo);\r\n        }\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            width: '15%',\r\n            editable: true,\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            width: '20%',\r\n            editable: true,\r\n        },\r\n        {\r\n            title: 'Action(s)',\r\n            dataIndex: 'operation',\r\n            width: '5%',\r\n            render: (_, record) => {\r\n                const editable = isEditing(record);\r\n                return editable ? (\r\n                    <span>\r\n                        <a\r\n                            href=\"javascript:;\"\r\n                            onClick={() => save(record.key)}\r\n                            style={{\r\n                                marginRight: 8,\r\n                            }}\r\n                        >\r\n                            Save\r\n                        </a>\r\n                        <Popconfirm title=\"Sure you want to cancel?\" okText=\"Yes\"\r\n                                cancelText=\"No\" onConfirm={cancel}>\r\n                            <a>Cancel</a>\r\n                        </Popconfirm>\r\n                    </span>\r\n                ) : (\r\n                        <div>\r\n                            <div style={{ 'display': 'inline-block', 'padding': '10px' }}>\r\n                                <a disabled={editingKey !== ''} onClick={() => edit(record)}>\r\n                                    <Edit style={{ 'color': '#2191bb' }} />\r\n                                </a>\r\n                            </div>\r\n                            <div style={{ 'display': 'inline-block' }}>\r\n                            <Popconfirm\r\n                                title=\"Are you sure to delete this player?\"\r\n                                onConfirm={() => deleteRow(record)}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <a><Delete style={{ 'color': '#ff4141' }} /></a>\r\n                            </Popconfirm>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n            },\r\n        },\r\n    ];\r\n\r\n    \r\n\r\n    const mergedColumns = columns.map((col) => {\r\n        if (!col.editable) {\r\n            return col;\r\n        }\r\n\r\n        return {\r\n            ...col,\r\n            onCell: (record) => ({\r\n                record,\r\n                dataIndex: col.dataIndex,\r\n                title: col.title,\r\n                editing: isEditing(record),\r\n            }),\r\n        };\r\n    });\r\n    \r\n    return (\r\n        <div style={{ justifyContent: 'center', alignItems: 'center', height: '90vh' }}>\r\n            <h1 className=\"page-title\">City Lions Player Information</h1>\r\n            <Form form={form} component={false}>\r\n                <div className=\"playerListTable\">\r\n                    <Form style={{float:'right'}}>\r\n                        <Button type=\"primary submit\" onClick={() => setIsModalVisible(true)} style={{'marginRight':'5px', marginBottom: 20}}>\r\n                                Add New Player +\r\n                        </Button>\r\n                    </Form>\r\n                    <Table\r\n                        components={{\r\n                            body: {\r\n                                cell: EditableCell,\r\n                            },\r\n                        }}\r\n                        bordered\r\n                        dataSource={data}\r\n                        columns={mergedColumns}\r\n                        rowClassName=\"editable-row\"\r\n                        pagination={{\r\n                            onChange: cancel,\r\n                            defaultPageSize: 11,\r\n                        }}\r\n                    />\r\n                </div>\r\n                \r\n            </Form>\r\n            <Modal title=\"Add New Player to Team\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel} footer={null}>\r\n                <>\r\n                    <Form\r\n                        labelCol={{ span: 4 }}\r\n                        wrapperCol={{ span: 14 }}\r\n                        layout=\"horizontal\"\r\n                        onFinish={ (e) => {\r\n                            console.log(e)\r\n                            e.key = data.length + 1;\r\n                            setData([...data, e])\r\n                            handleOk(false);\r\n                        }}\r\n                    >\r\n                        <Form.Item label=\"Name\" name=\"name\" rules={[{ required: true }]}>\r\n                            <Input placeholder=\"Name\" />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Email\" name=\"email\" rules={[{ required: true }]}>\r\n                            <Input placeholder=\"Email\" />\r\n                        </Form.Item>\r\n                    \r\n                        <Form.Item>\r\n                            <Button htmlType=\"submit\">Save</Button>\r\n                        </Form.Item> \r\n                    </Form>\r\n                </>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PlayerList\r\n",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":105,"column":45,"nodeType":"54","messageId":"55","endLine":105,"endColumn":47},{"ruleId":"56","severity":1,"message":"57","line":136,"column":25,"nodeType":"58","endLine":142,"endColumn":26},{"ruleId":"59","severity":1,"message":"60","line":137,"column":34,"nodeType":"61","messageId":"62","endLine":137,"endColumn":48},{"ruleId":"56","severity":1,"message":"63","line":147,"column":29,"nodeType":"58","endLine":147,"endColumn":32},{"ruleId":"56","severity":1,"message":"63","line":153,"column":33,"nodeType":"58","endLine":153,"endColumn":94},{"ruleId":"56","severity":1,"message":"63","line":164,"column":33,"nodeType":"58","endLine":164,"endColumn":36},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]